#!/usr/bin/env python
import sys

#commands
c = { '+': lambda p,m,i,ps: (p,       m[:p]+[m[p]+1]+m[p+1:],        i+1, ps,     ''),                     #increment data
      '-': lambda p,m,i,ps: (p,       m[:p]+[m[p]-(m[p]>0)]+m[p+1:], i+1, ps,     ''),                     #decrement data
      '>': lambda p,m,i,ps: (p+1,     m,                             i+1, ps,     ''),                     #increment pointer
      '<': lambda p,m,i,ps: (p-(i>0), m,                             i+1, ps,     ''),                     #increment pointer
      '.': lambda p,m,i,ps: (p,       m,                             i+1, ps,     chr(m[p])),              #output pointer
      '[': lambda p,m,i,ps: (p,       m,                             i+1, ps+[i], ''),                     #start loop
      ']': lambda p,m,i,ps: (p,       m,       ps[-1]+1 if m[p] else i+1, ps[:-1] if m[p]==0 else ps, ''), #stop loop
    }

def run(s,write):
  p,m,i,ps,o  = 0, [0]*2000, 0, [], '' #memory pointer, system memory, program pointer, program stack, output
  while i<len(s):
    try: p,m,i,ps,o = c[s[i]](p,m,i,ps)
    except: i+=1; o='';
    write(o)
  return 0

def helptext():
    return ('frainbuck, a brainf**k interpreter: v1.0\n'
            'Usage: frainbuck [-o outfile] [-f infile | -m input] [-i|-h]\n')

if __name__=='__main__': 
    args = dict(zip(sys.argv[1:][0::2],sys.argv[1:][1::2] or [0]))
    #output selection
    if   '-o' in args: out = open(args['-o'],'w')
    else:              out = sys.stdout; out.flush()
    #input selection
    if   '-h' in args: out.write(helptext()); sys.exit()
    elif '-m' in args: sin = args['-m']
    elif '-f' in args: f = open(args['-f'],'r');sin=f.read();f.close()
    elif '-i' in args: out.write('frainbuck, a brainf**k interpreter: v1.0\nInteractive Shell:\n------------------\n*: Not yet implemented! EXIT\n'); sys.exit()
    else: out.write(helptext()); sys.exit()
    #interpreter
    run(sin,out.write)
    #cleanup
    out.close()
